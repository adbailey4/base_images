sudo: required
services:
- docker
env:
  global:
  - REGISTRY_USER=travisbot
  - BRANCH=${TRAVIS_PULL_REQUEST_BRANCH:-$TRAVIS_BRANCH}
  - REPO=baileybase/embed_dependencies
  - secure: "r64+9746StuwowlBI/kprZpBqVprHASfRxB1VDzsdCXRFd3hp2SSyGh8x73NKS/g77RZrMBS6VWUa9y4rfPhTyFOVdiod0F85uIhr3dDyL1MojwRJnTFJMVOojK4gG/VCpRNWyzkhUYJs/T7d6U34KhmjNwM/G+8JMrvaxwlX3BPpqsLx15RT8dHs4/9csvsfqn0W21PwVRcZfkioBULMeHJAbIxyqF8mNf9pfN/w7w6tpNZxJEzuS6iUA5RpIDw6OoTkajH9/RvaGD4kwHKW9Qya7Un1m+ofBvVUOiH1VWZQShZi6hvefps3Z+kC+OC11YcOaz+CBWWDsOPmi9LKrd4EGXr21WEoQ4SlwI7q+jjmhMLhanDXO6ZrMQ5frL1BoZiRe4s+8FRpYKWRh5u6SCL0JH6XccSvCs8FdTWOCha75lQ6Qgb9bJ/kvgvBvgESB7JuLsafEGIxyMH7ykrqTH+D3HyvcyxjwnwTkKGOU6Kl0J2kNT0kZW6AM4U8W9VC8mK/Q5UHqFoLfg+Wu8rIg9wadKHndJuOsuakzcNzestW/nmVxeYgEftKN3EKf7ERgZllbLNcN6HD22bJIr1Rs8HONuHmwnI3/MI2NlwsAaNK32zd8Dg4RkzFbMKT07hs9TRz0lckXFLwx1pA5oBUKxeAFiBSFGd2fWDJtgCa+U="

notifications:
  slack:
    secure: qk4+aFW5R2/0fqaAz1tzpxSvDdDkRqJHEPdNUuHSSYZ66aJG6nu8y/oF8nLNos+ypk1bNbt51EKXfGrom73REB49m13zVUvpd2ZNYLVsF9z/NKr9pelwzl6+gnfu/Ku8GhELKKHp3HQSQFGpUKB0su9X5mgpOCH7lb5vpuDU/SU1TPp2UL5tzHoXbu66r6ptELUnD/9zctttAIZeeJJ5iwEjkCnKxxUVkT1+aZZAuwSfd65cEV6Q8Dxj2Cs1XENrkzJfaGyeryd5mxiFDm5f5mSE0pDR6l7Vk+yvoQ+fn+eBFxAWuC7dQM+paEncMXLERp9S+YPg5AbA0l5jvRV7LSCC0cuShy1bONZu2rjwW+oCnsDAdfE8gVyEyi2wUX3/0XP8GeTlZ7DAH3s1t28H0CIkvk8niRcl/Lmktk7Wnme63KrSaIkbzMDRj4HguheMn6PbA+IGp86aGuCWHGHRVdXaH1GepuL9bSeskO9+Bp7tffvp0QP+o4fqQzQ5SdyQ6KsdZifmzxpv1sR+Es3y5lTqkR2rpTkEP6AmlOVFUd8kT254pZIlRJIetsloazJ9o4gujCVnai5AsgIfbNcLNAvcD5blsSdMP9T55/KkwYf7f9LBa8NfLhz/bLJ2htcto+AWdxyr79T6ZwExTCMfGXxhJNnVfyO2O4i3XqgVFbM=

jobs:
  include:
  - os: linux
    dist: bionic
before_install:
- curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
- sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu
  $(lsb_release -cs) stable"
- sudo apt-get update
- sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce
- echo '{"features":{ "buildkit":true },"experimental":true}'  | sudo tee /etc/docker/daemon.json
- sudo service docker restart
- if [ "${BRANCH}" = "master" ]; then export BRANCH="latest"; else echo "Strings are
  not equal."; fi
- echo BRANCH "$BRANCH"
before_script:
- docker --version
- docker version -f '{{.Server.Experimental}}'
- docker pull $REPO || true
script:
#  embed base image
- cp embed_dependencies/Dockerfile .
- export DOCKER_BUILDKIT=1
- docker build --progress=plain --pull --cache-from $REPO:$BRANCH --tag $REPO:$BRANCH .
- docker run $REPO:$BRANCH
- rm Dockerfile
before_deploy:
- echo "$REGISTRY_PASS" | docker login --username $REGISTRY_USER --password-stdin
deploy:
  provider: script
  script: docker push $REPO:$BRANCH
  on:
    all_branches: true
